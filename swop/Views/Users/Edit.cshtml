<head>
    @if ((bool)Session["Logged"] == false)
    {
        <meta http-equiv="refresh" content="0; url = http://localhost:54598/Home/Index" />
    }
</head>

@model swop.Models.User

@{
    ViewBag.Title = "Edit";
}
<section class="section-2">

    <h1 style="margin-left:1%;">Edit Proflie</h1>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.UserId)
            @Html.HiddenFor(model => model.Email)
            @Html.HiddenFor(model => model.Balance)

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "start", @name = "trip-start", @min = "1900-01-01", @value = "1900-01-01" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>


            @if ((bool)Session["Logged"]) //an admin can make a user into an admin
            {
                if ((int)Session["UserType"] == 1)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserType, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @max = 1, @step = "1" } })
                            @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            }
    

            <div class="form-group">
                @Html.LabelFor(model => model.ApartmentDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ApartmentDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ApartmentDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ApartmentPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ApartmentPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ApartmentPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btnGeneral btnGeneral:hover" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Cancel", "Details", new { id = Model.UserId }, new { @class = "btnGeneral btnGeneral:hover", style = "margin-left:1%" })
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</section>